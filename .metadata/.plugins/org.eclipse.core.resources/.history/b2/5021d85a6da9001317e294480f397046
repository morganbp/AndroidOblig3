package no.morganbp.oblig3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import no.morganbp.oblig3.MainActivity.SearchForMovieTask;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.util.Log;

public class JSONMovieRequest {
	
	private String jsonString;
	private JSONObject jsonObject;
	private static final String jsonUrl = "http://deanclatworthy.com/imdb/?q=";
	
	public JSONMovieRequest(String movieSearch){
		String urlText = jsonUrl + movieSearch;
		new SearchForMovieTask().execute(urlText);
	}
	
	public String parseJSON(String jsonString) {
		String url;
		try {
			url = jsonObject.getString("imdburl");
		} catch (JSONException e) {
			return "couldn't find movie";
		}
		return url;
		
	}
	
	protected String getJSONString(String search) throws IOException {
		StringBuilder builder = new StringBuilder();
		HttpClient client = new DefaultHttpClient();
		try {
			URLEncoder.encode(search.trim(),"UTF-8");
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
			return "Invalid URL";
		}
		HttpGet httpGet;
		
		try{
			httpGet = new HttpGet(search.replaceAll("\\s+", "%20"));
		}catch(IllegalArgumentException ex){
			ex.printStackTrace();
			return "Invalid parameter";
		}
		try{
			HttpResponse response = client.execute(httpGet);
			StatusLine statusLine = response.getStatusLine();
			int statusCode = statusLine.getStatusCode();
			if(statusCode == 200){
				HttpEntity entity = response.getEntity();
				InputStream content = entity.getContent();
				BufferedReader reader = new BufferedReader(new InputStreamReader(content));
				String line;
				while((line = reader.readLine()) != null){
					builder.append(line);
				}
			}else{
				Log.e(MainActivity.class.toString(), "Failed to downlad file");
			}
		}catch(ClientProtocolException e){
			e.printStackTrace();
		}
		return builder.toString();
	}
	
	private class SearchForMovieTask extends AsyncTask<String, Void, String> {

		@Override
		protected String doInBackground(String... params) {
			
			try{
				return getJSONString(params[0]);
			}catch(IOException ex){
				return "Couldn't retrive web page.";
			}
			
		}

		@Override
		protected void onPostExecute(String result) {
			jsonString = result;
		}
		
		
	}
	
	
}
